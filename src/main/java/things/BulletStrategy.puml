@startuml
interface UpdateSprite {
    + {static} {abstract} void update();
}
interface DrawSprite {
    + {static} {abstract} void draw(Graphics2D g);
}

interface BulletSprite extends UpdateSprite {

}


class UpdateBullet implements BulletSprite {
    + void update();
}
class UpdateBulletAlt implements BulletSprite {
    + void update();
}

class UpdateTank implements UpdateSprite {
    + void update();
}

class DrawSquareSprite implements DrawSprite {
    + void draw(Graphics2D g);
}
class DrawPolygonalSprite implements DrawSprite {
    + void draw(Graphics2D g);
}

Bullet *- UpdateBulletAlt
Bullet *- UpdateBullet
Tank *- UpdateTank

Bullet *- DrawSquareSprite
Tank *- DrawSquareSprite

GameComponent *- DrawSprite
GameComponent *- UpdateSprite

abstract class GameComponent {
    # UpdateSprite updateSprite;
    # DrawSprite drawSprite;
    + GameComponent(int topLeftXPos, int topLeftYPos,
                    int width, int height, Color color)
    + void updateEntity();
    + void drawEntity();
    + void setUpdateSprite(UpdateSprite updateSprite);
    + void setDrawSprite(DrawSprite drawSprite);
}
class Bullet extends GameComponent {
}
class Tank extends GameComponent {
}

@enduml