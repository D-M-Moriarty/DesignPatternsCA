@startuml
interface UpdateSprite {
    + {static} {abstract} void update();
}
interface DrawSprite {
    + {static} {abstract} void draw(Graphics2D g);
}

class UpdateAlienBullet implements UpdateSprite {
    + void update();
}

class UpdateAlienInvaders2 implements UpdateSprite {
    + void update();
}

class UpdateBarrel implements UpdateSprite {
    + void update();
}

class UpdateBarrier implements UpdateSprite {
    + void update();
}

class UpdateBullet implements UpdateSprite {
    + void update();
}

class UpdateTank implements UpdateSprite {
    + void update();
}

class DrawSquareSprite implements DrawSprite {
    + void draw(Graphics2D g);
}

AlienBullet *- UpdateAlienBullet
AlienBullet *- DrawSquareSprite
AlienInvaders2 *- UpdateAlienInvaders2
Barrel *- UpdateBarrel
Barrier *- UpdateBarrier
Bullet *- UpdateBullet
Tank *- UpdateTank

AlienInvaders2 *- DrawSquareSprite
Barrel *- DrawSquareSprite
Barrier *- DrawSquareSprite
BarrierBlock *- DrawSquareSprite
Bullet *- DrawSquareSprite
Tank *- DrawSquareSprite

GameComponent *- DrawSprite
GameComponent *- UpdateSprite

abstract class GameComponent {
    # UpdateSprite updateSprite;
    # DrawSprite drawSprite;
    + GameComponent(int topLeftXPos, int topLeftYPos,
                    int width, int height, Color color)
    + void updateEntity();
    + void drawEntity();
    + void setUpdateSprite(UpdateSprite updateSprite);
    + void setDrawSprite(DrawSprite drawSprite);
}
class AlienBullet extends GameComponent {
}
class AlienEntity extends GameComponent {
 }
class AlienInvaders2 extends GameComponent {
}
class Barrel extends GameComponent {
}
class Barrier extends GameComponent {
}
class BarrierBlock extends GameComponent {
}
class Bullet extends GameComponent {
}
class Tank extends GameComponent {
}

@enduml